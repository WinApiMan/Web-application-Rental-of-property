@model IEnumerable<RentalOfProperty.WebUserInterface.Models.Ad.CityViewsModel>;

@{
    ViewData["Title"] = Localizer["СityViewsStatistics"];

    IEnumerable<RentalOfProperty.WebUserInterface.Models.Ad.CityViewsModel> datas;

    if (ViewBag.CitiesViewsStatistic == CitiesViewsStatistic.DailyAds)
    {
        datas = Model.OrderByDescending(item => item.DailyAdsViews).ThenByDescending(item => item.LongTermAdsViews).Take(20);
    }
    else
    {
        datas = Model.OrderByDescending(item => item.LongTermAdsViews).ThenByDescending(item => item.DailyAdsViews).Take(20);
    }

    string citiesJson = JsonSerializer.Serialize(datas.Select(item => item.City));
    string longTermAdsViewsJson = JsonSerializer.Serialize(datas.Select(item => item.LongTermAdsViews));
    string dailyAdsViewsJson = JsonSerializer.Serialize(datas.Select(item => item.DailyAdsViews));
}

<div style="height:90vh">
    <h3 class="text-center pb-2 pt-2">@Localizer["СityViewsStatistics"]</h3>
    <canvas id="densityCanvas"></canvas>
</div>


@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        let cities = JSON.parse(JSON.stringify(@Html.Raw(citiesJson)));
        let longTermAdsViewsJson = JSON.parse(JSON.stringify(@Html.Raw(longTermAdsViewsJson)));
        let dailyAdsViewsJson = JSON.parse(JSON.stringify(@Html.Raw(dailyAdsViewsJson)));

        var densityData = {
            label: '@Localizer["DailyAds"]',
            data: dailyAdsViewsJson,
            borderColor: 'rgb(75, 192, 192)',
            backgroundColor:'rgb(75, 192, 192)'
        };
        var densityData1 = {
            label: '@Localizer["LongTermAds"]',
            data: longTermAdsViewsJson,
            borderColor: 'rgb(255, 99, 132)',
            backgroundColor: 'rgb(255, 99, 132)'
        };

        var ctxA = document.getElementById('densityCanvas');
        var barChart = new Chart(ctxA, {
        type: 'bar',
            data: {
                labels: cities,
        datasets: [densityData, densityData1]
        }
        });
    </script>
}
